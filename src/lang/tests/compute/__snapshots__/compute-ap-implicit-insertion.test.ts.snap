// Vitest Snapshot v1, https://bun:test.dev/guide/snapshot.html

exports[`compute ApImplicit -- insertion -- deepWalk required 1`] = `
"cons("abc", sole): Pair(String, Trivial)
cons("abc", sole): Pair(String, Trivial)"
`;

exports[`compute ApImplicit -- insertion -- during check 1`] = `"(_) => _: (String) -> String"`;

exports[`compute ApImplicit -- insertion -- id 1`] = `
"sole: Trivial
"abc": String"
`;

exports[`compute ApImplicit -- insertion -- infer 1`] = `
"Trivial: Type
String: Type"
`;

exports[`compute ApImplicit -- insertion -- infer2 -- over 1`] = `
"Pair(Trivial, String): Type
Pair(Trivial, Trivial): Type
Pair(String, Trivial): Type
Pair(String, String): Type"
`;

exports[`compute ApImplicit -- insertion -- infer2 1`] = `
"Pair(Trivial, String): Type
Pair(Trivial, Trivial): Type
Pair(String, Trivial): Type
Pair(String, String): Type"
`;

exports[`compute ApImplicit -- insertion -- inferReturnType 1`] = `
"Trivial: Type
String: Type"
`;

exports[`compute ApImplicit -- insertion -- nested 1`] = `
"cons(cons("abc", sole), sole): Pair(Pair(String, Trivial), Trivial)
cons(cons(cons("abc", sole), sole), sole): Pair(Pair(Pair(String, Trivial), Trivial), Trivial)"
`;
