{
  Element: Trivial,
  mul: (x, y) => sole,
  mulAssociative: (x, y, z) => refl(implicit Trivial, implicit sole),
  id: sole,
  idLeft: (x) => refl(implicit Trivial, implicit sole),
  idRight: (x) => refl(implicit Trivial, implicit sole),
  inverse: (x) => sole,
  inverseLeft: (x) => refl(implicit Trivial, implicit sole),
  inverseRight: (x) => refl(implicit Trivial, implicit sole),
  div: (x, y) => sole
}: class Group {
  Element: Type = Trivial
  mul: (Trivial, Trivial) -> Trivial = (x, y) => sole
  mulAssociative: (Trivial, Trivial, Trivial) -> Equal(Trivial, sole, sole) = (x, y, z) => refl(implicit Trivial, implicit sole)
  id: Trivial = sole
  idLeft: (Trivial) -> Equal(Trivial, sole, sole) = (x) => refl(implicit Trivial, implicit sole)
  idRight: (Trivial) -> Equal(Trivial, sole, sole) = (x) => refl(implicit Trivial, implicit sole)
  inverse: (Trivial) -> Trivial = (x) => sole
  inverseLeft: (Trivial) -> Equal(Trivial, sole, sole) = (x) => refl(implicit Trivial, implicit sole)
  inverseRight: (Trivial) -> Equal(Trivial, sole, sole) = (x) => refl(implicit Trivial, implicit sole)
  div: (Trivial, Trivial) -> Trivial = (x, y) => sole
}
(x, y) => sole: (Trivial, Trivial) -> Trivial
(y) => sole: (Trivial) -> Trivial
sole: Trivial
(x, y) => sole: (Trivial, Trivial) -> Trivial
(y) => sole: (Trivial) -> Trivial
sole: Trivial
