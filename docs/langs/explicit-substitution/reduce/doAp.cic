import { Exp } from "../exp/index.cic"
import { Mod } from "../mod/Mod.cic"
import { reduce } from "./reduce.cic"

export function doAp(mod: Mod, target: Exp, arg: Exp): Exp {
  match target {
    case Exp::Fn(name, ret) =>
      reduce(mod, Exp::Let([new Binding(name, arg)], ret))

    case _ => Exp::Ap(target, arg)
  }
}
